---
- name: Test tasks
  hosts: local
  tasks:
    - name: Print facts
      debug:
        var: ansible_facts
        verbosity: 2

    - name: Print arch
      debug:
        msg: |-
          System: {{ ansible_facts.system }}
          Arch:   {{ ansible_facts.architecture }}

    - name: Check for line in .tool-versions
      command: grep -i 'python 3' {{ ansible_facts.user_dir }}/.tool-versions
      register: asdf_python_version
      changed_when: false

    - name: Get python version
      

    - name: Set python dir
      set_fact:
        asdf_python_bin_dir: "{{ asdf_dir }}/installs/python/{{ asdf_python_version.stdout|replace('python ', '') }}/bin"
      when: asdf_python_version.stdout is defined

    - name: Set python paths
      set_fact:
        pipx_pip3_path: "{{ asdf_python_bin_dir }}/pip3"
        pipx_path: "{{ asdf_python_bin_dir }}/pipx"
      when: asdf_python_bin_dir is defined

    - name: Debug paths
      debug:
        msg: |
          asdf python bin dir: {{ asdf_python_bin_dir|default('') }}
          pipx pip3 path:      {{ pipx_pip3_path }}
          pipx path:           {{ pipx_path }}

# - name: Get latest tmux release
#   uri:
#     url: https://api.github.com/repos/tmux/tmux/releases/latest
#     return_content: true
#   run_once: false
#   register: tmux_latest
#   changed_when: false

# - name: Get tmux installed version
#   command: tmux -V
#   register: tmux_current
#   changed_when: false

# - name: Set version strings
#   set_fact:
#     tmux_current_version: "{{ tmux_current.stdout_lines[0].split(' ')[1] | d() | replace('next-', '') }}"
#     tmux_latest_version: "{{ tmux_latest.json.name.split(' ')[1] | d() }}"
#     tmux_latest_url: "{{ tmux_latest.json.assets[0].browser_download_url }}"
#     tmux_current_beta: "{{ 'next' in tmux_current.stdout }}"

# - name: Tmux | Download and install latest release
#   block:
#     - name: Tmux | Create temp dl dir
#       tempfile:
#         state: directory
#         suffix: _tmux
#       register: tmux_dl_path

#     - name: Tmux | Download latest release
#       unarchive:
#         src: "{{ tmux_latest_url }}"
#         dest: "{{ tmux_dl_path.path }}"
#         remote_src: true

#     - name: Tmux | Set src path
#       set_fact:
#         tmux_src_path: "{{ tmux_dl_path.path }}/tmux-{{ tmux_latest_version }}"

#     - name: Tmux | Build from source tarball

# always:
#   - name: Tmux | Cleanup temp files
#     file:
#       path: "{{ tmux_dl_path.path }}"
#       state: absent
# when: tmux_latest_version is version(tmux_current_version, '>') or tmux_force|d(false)

# vim:ft=yaml.ansible:
