---
# tasks for dotfiles
- name: Clone dotfiles repo
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_dest }}"
    version: HEAD
    key_file: "{{ ansible_facts['env']['HOME'] }}/.ssh/id_rsa"
    accept_hostkey: yes
    force: no
    update: yes

- name: Run dotdrop install
  command: "{{ dotdrop_bin }} install -c {{ dotdrop_cfg }} --force"
  register: dotinstall
  changed_when: "'0 dotfile(s) installed' not in dotinstall.stdout"

# # Manual Symlinking of Files (slow) {{{1
# # TODO: can this be done in parallel?
# - name: Get host dotfiles
#   set_fact:
#     host_dotfiles: "{{ dotfiles['files'] | union(dotfile_profiles[profile]['dotfiles']) }}"
#   loop: "{{ dotfiles['include_profiles'] }}"
#   loop_control:
#     loop_var: profile
#
# - name: Attempt link
#   file:
#     src: "{{ base_dir }}/{{ item.value['src'] }}"
#     dest: "{{ item.value['dst'] }}"
#     state: link
#     force: yes
#   loop: "{{ all_dotfiles|dict2items }}"
#   loop_control:
#     index_var: idx
#     label: "{{ idx }}: {{ item.key }}"
#   register: linkattempts
#   ignore_errors: yes
#   when: "item.key in host_dotfiles"
#
# - name: Handle errors - delete existing directory
#   file:
#     path: "{{ item['path'] }}"
#     state: absent
#   loop: "{{ linkattempts.results }}"
#   loop_control:
#     label: "{{ item['item']['key'] | default() }}"
#   register: delete
#   when: "item['failed'] | default() and (item['state'] | default() == 'directory')"
#
# - name: Handle errors - replace with link
#   file:
#     src: "{{ base_dir }}/{{ item['item']['item']['value']['src'] | default() }}"
#     dest: "{{ item['path'] }}"
#     state: link
#     force: yes
#   loop: "{{ delete.results }}"
#   loop_control:
#     label: "{{ item['item']['item']['key'] | default() }}"
#   when: "item['changed'] | default()"
