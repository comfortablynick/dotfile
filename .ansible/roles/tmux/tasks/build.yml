---
# tmux
- name: Tmux | Build from master
  block:
    - name: Tmux | Clone master
      git:
        repo: https://github.com/tmux/tmux
        dest: "{{ tmux_source_dir }}"
        depth: "1"
        force: true
      register: tmux_git_clone

    - name: Tmux | Debug changes to git
      debug:
        msg: |
          Before:      {{ tmux_git_clone.before }}
          After:       {{ tmux_git_clone.after }}
          Force build: {{ tmux_force_build }}
        verbosity: 1

    - name: Tmux | Build dependencies
      import_tasks: deps.yml

    - name: Tmux | Build from source
      command:
        cmd: "{{ item }}"
        chdir: "{{ tmux_source_dir }}"
      loop:
        - sh autogen.sh
        - >-
          ./configure --prefix={{ tmux_install_prefix }}
            CPPFLAGS="-I{{ tmux_install_prefix }}/include -I{{ tmux_install_prefix }}/include/ncurses"
            LDFLAGS="-L{{ tmux_install_prefix }}/lib"
        - make -j{{ tmux_make_concurrency }}
        - make install
      when: (tmux_git_clone.before != tmux_git_clone.after) or tmux_force_build
      changed_when: true
  when: tmux_build_from_master

- name: Tmux | Build latest release tarball
  block:
    - name: Tmux | Query latest tmux release
      uri:
        url: https://api.github.com/repos/tmux/tmux/releases/latest
        return_content: true
      run_once: false
      register: tmux_latest
      changed_when: false

    - name: Tmux | Get installed version
      command: "{{ tmux_install_prefix }}/bin/tmux -V"
      register: tmux_current
      changed_when: false
      failed_when: false

    - name: Tmux | Set version strings
      set_fact:
        tmux_current_version: "{% if tmux_current.stdout|length > 1 %}{{ tmux_current.stdout.split(' ')[1] }}{% else %}0.0.1{% endif %}"
        tmux_latest_version: "{{ tmux_latest.json.name.split(' ')[1] | d() }}"
        tmux_latest_url: "{{ tmux_latest.json.assets[0].browser_download_url }}"
        tmux_current_beta: "{{ 'next' in tmux_current.stdout }}"

    - name: Tmux | Download and install latest release
      block:
        - name: Tmux | Create temp dl dir
          tempfile:
            state: directory
            suffix: _tmux
          register: tmux_dl_path

        - name: Tmux | Download latest release
          unarchive:
            src: "{{ tmux_latest_url }}"
            dest: "{{ tmux_dl_path.path }}"
            remote_src: true

        - name: Tmux | Set src path
          set_fact:
            tmux_source_dir: "{{ tmux_dl_path.path }}/tmux-{{ tmux_latest_version }}"

        - name: Tmux | Build dependencies
          import_tasks: deps.yml

        - name: Tmux | Build from source tarball
          command:
            cmd: "{{ item }}"
            chdir: "{{ tmux_source_dir }}"
          loop:
            - >-
              ./configure --prefix={{ tmux_install_prefix }}
                CPPFLAGS="-I{{ tmux_install_prefix }}/include -I{{ tmux_install_prefix }}/include/ncurses"
                LDFLAGS="-L{{ tmux_install_prefix }}/lib"
            - make -j{{ tmux_make_concurrency }}
            - make install
          changed_when: true
      always:
        - name: Tmux | Cleanup temp files
          file:
            path: "{{ tmux_dl_path.path }}"
            state: absent
      when: tmux_latest_version is version(tmux_current_version, '>') or tmux_force_build|d(false)
  when: not tmux_build_from_master
