---
# tasks for arch hosts
- name: Create aur module user
  block:
    - name: Create user aur_builder
      user:
        name: aur_builder
        group: wheel
    - name: Add permissions for aur_builder
      lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        mode: 0644
        create: true
        validate: 'visudo -cf %s'
  become: true

- name: Find out of date mirrorlist
  find:
    paths: [/etc/pacman.d]
    pattern: mirrorlist
    age: "{{ pkg_pacman_mirrorlist_age }}"
    age_stamp: mtime
  register: mirrorlist_found

- name: Update mirrorlist
  block:
    - name: Install reflector
      pacman:
        name: reflector
        state: present
      become: true
    - name: Create temp file for new mirrorlist
      tempfile:
        state: file
        suffix: pkg_mirrorlist
      register: mirrorlist_temp
    - name: Replace mirrorlist
      block:
        - name: Run reflector
          command:
            /usr/bin/python3 -m Reflector --verbose -p http -p https --latest 20 --sort rate --country "United States" --save {{ mirrorlist_temp.path }}
          changed_when: true
        - name: Backup mirrorlist
          copy:
            src: /etc/pacman.d/mirrorlist
            dest: /etc/pacman.d/mirrorlist.bak
            mode: 0644
            force: true
            remote_src: true
          become: true
        - name: Replace mirrorlist with new file
          copy:
            src: "{{ mirrorlist_temp.path }}"
            dest: /etc/pacman.d/mirrorlist
            mode: 0644
            remote_src: true
          become: true
      always:
        - name: Cleanup temp mirrorlist
          file:
            path: "{{ mirrorlist_temp.path }}"
            state: absent
      when: mirrorlist_temp is defined
  when: mirrorlist_found['matched'] or pkg_force_update_mirrorlist|d(false)

- name: Upgrade pacman packages
  pacman:
    update_cache: true
    upgrade: true
  become: true
  register: pacout

- name: Install pacman packages
  pacman:
    name: "{{ pkg_pacman_packages }}"
    state: present
  become: true

- name: Check if aur helper exists
  stat:
    path: /usr/bin/{{ pkg_aur_helper }}
  register: aur_helper_stat

- name: Clone and build aur helper
  block:
    - name: Clone aur helper
      git:
        repo: https://aur.archlinux.org/{{ pkg_aur_helper }}-bin.git
        dest: "{{ pkg_aur_helper_srcdir }}/{{ pkg_aur_helper }}"
        update: true

    - name: Build and install aur helper
      command:
        chdir: "{{ pkg_aur_helper_srcdir }}/{{ pkg_aur_helper }}"
        cmd: makepkg -si --noconfirm
        creates: /usr/bin/{{ pkg_aur_helper }}
  always:
    - name: Cleanup aur helper src
      file:
        path: "{{ pkg_aur_helper_srcdir }}/{{ pkg_aur_helper }}"
        state: absent
  when: not aur_helper_stat.stat.exists

# - name: Install packages from aur using aur helper
#   pacman:
#     name: "{{ pkg_aur_packages }}"
#     state: present
#     executable: "{{ pkg_aur_helper }}"
#     extra_args: -a --devel
#   become: true
#   become_user: aur_builder

# - name: Upgrade packages from aur using aur helper
#   pacman:
#     upgrade: true
#     executable: "{{ pkg_aur_helper }}"
#     extra_args: -a --devel
#   become: true
#   become_user: aur_builder

- name: Upgrade aur packages
  yay:
    update_cache: true
    upgrade: true
    executable: "{{ pkg_aur_helper }}"
  become: true
  become_user: aur_builder

- name: Install aur packages
  yay:
    name: "{{ pkg_aur_packages }}"
    executable: "{{ pkg_aur_helper }}"
  become: true
  become_user: aur_builder
