---
# asdf

# BASH --------------------------------
- name: Check whether .bashrc file exists
  stat:
    path: "{{ asdf_bashrc_path }}"
  register: asdf_bashrc_st

# - name: Resolve .bashrc symlink
#   set_fact:
#     asdf_bashrc_path: "{{ asdf_bashrc_st.stat.lnk_source }}"
#   when: asdf_bashrc_st.stat.exists and asdf_bashrc_st.stat.islnk

- name: Load asdf in .bashrc
  blockinfile:
    dest: "{{ asdf_bashrc_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: asdf"
    block: |
      if [[ -e $HOME/.asdf/asdf.sh ]]; then
        source $HOME/.asdf/asdf.sh
        source $HOME/.asdf/completions/asdf.bash
      fi
  when: asdf_bashrc_st.stat.exists

# - name: Set path to .zshrc
#   set_fact:
#     asdf_zshrc_path: "{{ asdf_home }}/.zshrc"
#   when: asdf_zshrc_path is undefined

# ZSH ---------------------------------
- name: Check whether .zshrc exists
  stat:
    path: "{{ asdf_zshrc_path }}"
  register: asdf_zshrc_st

# - name: Resolve .zshrc symlink
#   set_fact:
#     asdf_zshrc_path: "{{ asdf_zshrc_st.stat.lnk_source }}"
#   when: asdf_zshrc_st.stat.exists and asdf_zshrc_st.stat.islnk

- name: Load asdf in .zshrc
  blockinfile:
    dest: "{{ asdf_zshrc_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: asdf"
    block: |
      if [[ -e $HOME/.asdf/asdf.sh ]]; then
        source $HOME/.asdf/asdf.sh
        source $HOME/.asdf/completions/asdf.bash
      fi
  when: asdf_zshrc_st.stat.exists

# FISH ------------------------------
- name: Check whether config.fish file exists
  stat:
    path: "{{ asdf_fish_config_path }}"
  register: asdf_fish_config_st

- name: Check whether asdf.fish file exists
  stat:
    path: "{{ asdf_dir }}/completions/asdf.fish"
  register: asdf_fish_completions_st

- name: Copy fish completions
  copy:
    src: "{{ asdf_dir }}/completions/asdf.fish"
    dest: "{{ asdf_home }}/.config/fish/completions/asdf.fish"
    remote_src: true
  when: asdf_fish_config_st.stat.exists and asdf_fish_completions_st.stat.exists
