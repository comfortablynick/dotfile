#   _                                          __
#  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
# (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#

# General {{{
# Terminal
set-option -g default-shell /usr/local/bin/fish
set -g default-terminal "screen-256color"       # color!
set -ga terminal-overrides ",xterm-256color:Tc" # utf8/color hack
set -g xterm-keys on                            # auto scroll mode in xterms
set -g history-limit 5000                       # increase history
set-option -sg escape-time 10                   # Recommended by Neovim
set-option -g repeat-time 200                   # How long it waits for repeat (def. 500)

set-option -g destroy-unattached off            # keep all sessions

# Reload .tmux.conf in place
bind r source ~/.tmux.conf \; display-message "Conf reloaded..."
# }}}
# Display {{{
# numbering
set -g base-index 1                             # start windows numbering at 1
set -g renumber-windows on                      # renumber windows when a window is closed
setw -g pane-base-index 1                       # make pane numbering consistent with windows

setw -g aggressive-resize on                    # allow different client sizes

# titles
set -g set-titles on                            # set terminal title
setw -g automatic-rename on                     # rename window to reflect current program

set -g display-panes-time 800                   # slightly longer pane indicators display time
set -g display-time 1000                        # slightly longer status messages display time

set -g status-interval 2                        # redraw status line every 2 seconds

# clear screen
bind C-l send-keys 'C-l'

# activity
set -g monitor-activity on
set -g visual-activity off
# }}}
# Prefix keys {{{
# Use <CTRL>+a as command prefix
unbind C-a
set -g prefix C-a
bind C-a send-prefix
# }}}
# Navigation {{{
# splitting
unbind '"'
unbind '%'
bind v split-window -h -c "#{pane_current_path}"
bind V split-window -v -c "#{pane_current_path}"

# pane resizing (reset with M-1/M-2)
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5


# window vi-style navigation
bind -r h previous-window                                       # identical to `n`
bind -r l next-window                                           # identical to `p`
bind Tab last-window                                            # move to last active window

# smart pane switching with awareness of vim splits
# needs vim-tmux-navigator plugin christoomey/vim-tmux-navigator
# see: https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# kill current pane/window
bind x confirm-before kill-pane
bind X confirm-before kill-window
# }}}
# Copy mode {{{
# set-clipboard on
# Vim style shortcuts
setw -g mode-keys vi
unbind [
unbind ]
bind Escape copy-mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# pane switching
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# }}}
# Mouse mode {{{
set -g mouse on

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Toggle mouse mode on or off
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'
# }}}
# Status bar {{{
# run powerline-config to source automatically
run-shell "powerline-config tmux setup"
# }}}
# Nested sessions {{{
# set -g status-bg colour40
# setw -g window-status-current-bg colour40
# Also, change some visual styles when window keys are off
# if-shell 'test -n "$SSH_CLIENT"' set -g status-position top
# bind -T root F12  \
#     set prefix None \;\
#     set key-table off \;\
#     set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
#     set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#     set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
#     if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#     refresh-client -S \;\
#
# bind -T off F12 \
#   set -u prefix \;\
#   set -u key-table \;\
#   set -u status-style \;\
#   set -u window-status-current-style \;\
#   set -u window-status-current-format \;\
#   refresh-client -S
# }}}
# Plugins {{{
# TMUX plugin manager download {{{
if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# }}}
# List of plugins {{{
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
# }}}
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
# vim: set ft=tmux fdm=marker:
