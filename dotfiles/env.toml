# vim: fdm=marker fdl=1:

# Path {{{1
# Key can be blank, since all paths are combined
[[path]]
key = ''
val = '$HOME/bin'
args = '-U --path'
shell = 'common'

[[path]]
key = ''
val = '$HOME/git/python/shell'
args = '-Up --path'
shell = 'common'

[[path]]
key = ''
val = 'usr/local/go/bin'
args = '-Up --path'
shell = 'common'

[[path]]
key = ''
val = '$HOME/go/bin'
args = '-Up --path'
shell = 'common'

[[path]]
key = ''
val = '$HOME/.fzf/bin'
args = '-Up --path'
shell = 'common'
host = 'thor.local'

[[path]]
key = ''
val = '$XDG_CONFIG_HOME/bash/functions'
shell = 'bash'

# Environment Variables {{{1
# general system {{{2
[[env]]
key = 'XDG_CONFIG_HOME'
val = '$HOME/.config'
cat = 'system'
shell = 'common'

[[env]]
key = 'XDG_CACHE_HOME'
val = '$HOME/.cache'
cat = 'system'
shell = 'common'

[[env]]
key = 'XDG_DATA_HOME'
val = '$HOME/.local'
cat = 'system'
shell = 'common'

[[env]]
key = 'LC_ALL'
val = 'en_US.utf-8'
cat = 'system'
shell = 'common'
desc = 'Default encoding'

[[env]]
key = 'BROWSER'
val = 'w3m'
cat = 'system'
shell = 'common'
desc = 'Text-based browser'

[[env]]
key = 'CDG_PATH'
val = [
    "$HOME/git/python",
    "$HOME/dotfiles/dotfiles",
    "$HOME/.vim",
    "$HOME/.vim/config",
    "$XDG_CONFIG_HOME/fish",
    "$XDG_CONFIG_HOME/fish/functions",
    "$XDG_CONFIG_HOME/fish/completions",
    "$XDG_CONFIG_HOME/fish/conf.d",
]
cat = 'system'
shell = 'fish'
desc = 'Directories for cdg function (bookmarks)'

# preferences {{{2
[[env]]
key = 'CLICOLOR'
val = 1
cat = 'preferences'
shell = 'common'
desc = 'Use colors in prompt'

[[env]]
key = 'NERD_FONTS'
val = 1
cat = 'preferences'
shell = 'common'
desc = 'Use glyphs in Vim'

[[env]]
key = 'LS_AFTER_CD'
val = 1
cat = 'preferences'
shell = 'common'
desc = 'Use snippet in conf.d to echo dir after $PWD change'

# Todo.txt {{{2
[[env]]
key = 'TODOTXT_CFG_FILE'
val = '$HOME/Dropbox/todo/todo.cfg'
cat = 'todo.txt'
shell = 'common'
desc = 'todo.txt config directory'

# fish {{{2
[[env]]
key = 'FISH_PKG_MGR'
val = 'FUNDLE'
cat = 'fish'
shell = 'fish'

[[env]]
key = 'FISH_PLUGIN_PATH'
val = '$XDG_DATA_HOME/fish_plugins'
cat = 'fish'
shell = 'fish'
desc = 'Plugin path for manual install'

[[env]]
key = 'FISH_THEME'
val = 'yimmy'
cat = 'fish'
shell = 'fish'

[[env]]
key = 'FISH_SSH_THEME'
val = 'yimmy'
cat = 'fish'
shell = 'fish'

# python {{{2
[[env]]
key = 'VIRTUAL_ENV_DISABLE_PROMPT'
val = 1
cat = 'python'
shell = 'fish'
desc = 'Disable default venv prompt'

[[env]]
key = 'VENV_DIR'
val = '$HOME/.env'
cat = 'python'
shell = 'common'
desc = 'Python virtual env directory'

[[env]]
key = 'def_venv'
val = '$VENV_DIR/dev/bin/activate.fish'
cat = 'python'
shell = 'common'
desc = 'Default venv directory'

[[env]]
key = 'NVIM_PY2_DIR'
val = '$HOME/.env/nvim2/bin/python'
cat = 'python'
shell = 'common'
desc = 'Neovim Python 2 venv'

[[env]]
key = 'NVIM_PY3_DIR'
val = '$HOME/.env/nvim3/bin/python'
cat = 'python'
shell = 'common'
desc = 'Neovim Python 3 venv'

# vim {{{2
[[env]]
key = 'VIM_COLOR'
val = 'PaperColor-dark'
cat = 'vim'
shell = 'common'
desc = 'Vim color theme'

[[env]]
key = 'NVIM_COLOR'
val = 'PaperColor-dark'
cat = 'vim'
shell = 'common'
desc = 'Neovim color theme'

# fzf {{{2
[[env]]
key = 'FZF_TMUX'
val = 1
cat = 'fzf'
shell = 'common'
desc = 'Use FZF for TMUX'

[[env]]
key = 'FZF_TMUX_HEIGHT'
val = '30%'
cat = 'fzf'
shell = 'common'
desc = 'Panel height for FZF TMUX'

[[env]]
key = 'FZF_LEGACY_KEYBINDINGS'
val = 0
cat = 'fzf'
shell = 'fish'
desc = 'Use legacy Fish FZF keybindings'

[[env]]
key = 'FZF_CTRL_T_COMMAND'
val = 'command find -L $dir -type f 2> /dev/null | sed "1d; s#^\./##"'
cat = 'fzf'
shell = 'fish'
desc = 'Commandline completion command'
quote = true

# Abbreviations {{{1
# misc apps {{{2
[[abbr]]
key = 'xo'
val = 'xonsh'
cat = 'misc'
shell = 'common'
desc = 'Open xonsh shell'

[[abbr]]
key = 'lp'
val = 'lpass'
cat = 'misc'
shell = 'common'
desc = 'LastPass cli'

[[abbr]]
key = 'vcp'
val = 'vcprompt -f "%b %r %p %u %m"'
cat = 'misc'
shell = 'common'
desc = 'Fast git status using C'
quote = true

[[abbr]]
key = 'vw'
val = 'view'
cat = 'misc'
shell = 'common'
desc = 'Call view function'

[[abbr]]
key = 'z'
val = 'j'
cat = 'misc'
shell = 'common'
desc = 'Use autojump (j) instead of z'

# directories {{{2
# general {{{3
[[abbr]]
key = 'h'
val = "$HOME"
cat = 'dirs'
shell = 'common'

# git {{{3
[[abbr]]
key = 'g'
val = 'git'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'ga'
val = 'git add'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gc'
val = 'git commit'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gpl'
val = 'git pull'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gph'
val = 'git push'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gs'
val = 'git show'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gcp'
val = 'git commit && git push'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gac'
val = 'git add . && git commit'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gsync'
val = 'git pull && git add . && git commit && git push'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gco'
val = 'git checkout master'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gcol'
val = 'git checkout (git describe --tags)'
cat = 'cmds'
shell = 'fish'
quote = true

[[abbr]]
key = 'gd'
val = 'git diff'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gdf'
val = 'git diff'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gdiff'
val = 'git diff'
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'gst'
val = 'git status -s'
cat = 'cmds'
shell = 'common'
desc = 'Short git status format'
quote = true

[[abbr]]
key = 'glog'
val = 'vim +GV'
cat = 'cmds'
shell = 'common'
desc = 'Open interactive git log in vim'
quote = true

[[abbr]]
key = 'grst'
val = 'git reset --hard origin/master'
cat = 'cmds'
shell = 'common'
desc = 'Overwrite local repo with remote'
quote = true

[[abbr]]
key = 'gsub'
val = 'git submodule foreach --recursive git pull origin master'
cat = 'cmds'
shell = 'common'
desc = 'Update all submodules recursively'
quote = true

[[abbr]]
key = 'gunst'
val = 'git reset HEAD'
cat = 'cmds'
shell = 'common'
desc = 'Unstage file'
quote = true

[[abbr]]
key = 'grmi'
val = 'git rm --cached'
cat = 'cmds'
shell = 'common'
desc = 'Remove from git index but keep local filesystem copy'
quote = true

# python {{{3
[[abbr]]
key = 'gpy'
val = '$HOME/git/python'
cat = 'dirs'
shell = 'common'

[[abbr]]
key = 'gpython'
val = '$HOME/git/python'
cat = 'dirs'
shell = 'common'

[[abbr]]
key = 'pysh'
val = '$HOME/git/python/shell'
cat = 'dirs'
shell = 'common'

# dotfiles {{{3
[[abbr]]
key = 'dot'
val = '$HOME/dotfiles/dotfiles'
cat = 'dirs'
shell = 'common'

[[abbr]]
key = 'gdot'
val = '$HOME/dotfiles/dotfiles'
cat = 'dirs'
shell = 'common'

[[abbr]]
key = 'vdot'
val = '$HOME/dotfiles/dotfiles/.vim'
cat = 'dirs'
shell = 'common'

[[abbr]]
key = 'vico'
val = '$HOME/dotfiles/dotfiles/.vim/config'
cat = 'dirs'
shell = 'common'

# fish config {{{3
[[abbr]]
key = 'fc'
val = '$__fish_config_dir'
cat = 'dirs'
shell = 'fish'
desc = 'Fish dir in $XDG_CONFIG_HOME'

[[abbr]]
key = 'ffn'
val = '$__fish_config_dir/functions'
cat = 'dirs'
shell = 'fish'
desc = 'Fish user functions dir'

[[abbr]]
key = 'fcm'
val = '$__fish_config_dir/completions'
cat = 'dirs'
shell = 'fish'
desc = 'Fish user completions dir'

[[abbr]]
key = 'fcd'
val = '$__fish_config_dir/conf.d'
cat = 'dirs'
shell = 'fish'
desc = 'Fish user config snippets'

# bash config {{{3
[[abbr]]
key = 'bcd'
val = '$XDG_CONFIG_HOME/bash/conf.d'
cat = 'dirs'
shell = 'bash'
desc = 'Bash snippets dir'

[[abbr]]
key = 'bfd'
val = '$XDG_CONFIG_HOME/bash/functions'
cat = 'dirs'
shell = 'bash'
desc = 'Bash functions dir'

# commands {{{2
# general {{{3
[[abbr]]
key = '-'
val = 'cd'
cat = 'cmds'
shell = 'fish'


[[abbr]]
key = 'pd'
val = 'prevd'
cat = 'cmds'
shell = 'fish'
desc = 'cd to previous dir'

[[abbr]]
key = 'nd'
val = 'nextd'
cat = 'cmds'
shell = 'fish'
desc = 'cd to next dir'

[[abbr]]
key = 'rmdir'
val = 'rm -rf'
cat = 'cmds'
shell = 'common'
desc = 'Remove directory and contents recursively'
quote = true

[[abbr]]
key = 'version'
val = 'cat /etc/os-release'
cat = 'cmds'
shell = 'common'
desc = 'View linux version'
quote = true

[[abbr]]
key = 'lookbusy'
val = 'cat /dev/urandom | hexdump -C | grep --color "ca fe"'
cat = 'cmds'
shell = 'common'
desc = 'Displays a lot of TV-like code on the screen'
quote = true

[[abbr]]
key = 'mntp'
val = 'sudo mount -t drvfs P: /mnt/p'
cat = 'cmds'
shell = 'common'
desc = 'Mount P: drive'
quote = true

# ls {{{3
[[abbr]]
key = 'ls'
val = 'ls -h --color=auto --group-directories-first'
cat = 'ls'
shell = 'bash'
desc = 'List all files'
quote = true

[[abbr]]
key = 'lsa'
val = 'ls -ah'
cat = 'ls'
shell = 'common'
desc = 'List all files'
quote = true

[[abbr]]
key = 'la'
val = 'ls -ah'
cat = 'ls'
shell = 'common'
desc = 'List all files'
quote = true

[[abbr]]
key = 'll'
val = 'ls -lh'
cat = 'ls'
shell = 'common'
desc = 'List files in long format'
quote = true

[[abbr]]
key = 'lla'
val = 'ls -lah'
cat = 'ls'
shell = 'common'
desc = 'List all files in long format'
quote = true

# exit {{{3
[[abbr]]
key = 'x'
val = 'exit'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'q'
val = 'exit'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'quit'
val = 'exit'
cat = 'cmds'
shell = 'common'

# chmod {{{3
[[abbr]]
key = 'che'
val = 'chmod +x'
cat = 'cmds'
shell = 'common'
desc = 'Assign execute permission for current user to file'
quote = true

[[abbr]]
key = 'chr'
val = 'chmod 755'
cat = 'cmds'
shell = 'common'
desc = 'Assign standard permission to file'
quote = true

# fzf {{{3
[[abbr]]
key = 'fp'
val = "fzf-tmux --reverse --preview 'cat {} --color=always'"
cat = 'cmds'
shell = 'common'
quote = true

[[abbr]]
key = 'p'
val = 'fzf_cdhist'
cat = 'cmds'
shell = 'fish'
desc = 'FZF widget for cd history'

[[abbr]]
key = 'cdf'
val = '__fzf_cd'
cat = 'cmds'
shell = 'fish'
desc = 'Use FZF to search for directory and CD'

# powerline {{{3
[[abbr]]
key = 'pr'
val = 'powerline-daemon --replace'
cat = 'cmds'
shell = 'common'
desc = 'Restart powerline daemon'
quote = true

# list.py {{{3
[[abbr]]
key = 'l'
val = 'list'
cat = 'cmds'
shell = 'common'
desc = 'list.py'
quote = true

[[abbr]]
key = 'lso'
val = 'list -hO'
cat = 'cmds'
shell = 'fish'
desc = 'Dir listing, human readable with octal permissions'
quote = true

[[abbr]]
key = 'listd'
val = 'list --debug'
cat = 'cmds'
shell = 'common'
desc = 'Debug list.py'
quote = true

[[abbr]]
key = 'listh'
val = 'list --help'
cat = 'cmds'
shell = 'common'
desc = 'Help for list.py'
quote = true

# todo.txt {{{3
[[abbr]]
key = 't'
val = 'todo'
cat = 'cmds'
shell = 'common'
desc = 'todo.sh'

[[abbr]]
key = 'tp'
val = 'topydo'
cat = 'cmds'
shell = 'common'
desc = 'topydo.py'

# tmux {{{3
[[abbr]]
key = 'te'
val = "vim $HOME/.tmux.conf && tmux source ~/.tmux.conf && tmux display '~/.tmux.conf sourced'"
cat = 'cmds'
shell = 'common'
desc = 'Open ~/.tmux.conf and reload after editing'
quote = true

[[abbr]]
key = 'tl'
val = 'tmux ls'
cat = 'cmds'
shell = 'common'
desc = 'List tmux sessions'
quote = true

# vim {{{3
[[abbr]]
key = 'v'
val = 'vim'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'n'
val = 'nvim'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'nv'
val = 'nvim'
cat = 'cmds'
shell = 'common'

[[abbr]]
key = 'vvim'
val = 'command vim'
cat = 'cmds'
shell = 'common'
desc = 'Open vim executable'
quote = true

[[abbr]]
key = 'vv'
val = 'command vim'
cat = 'cmds'
shell = 'common'
desc = 'Open vim executable'
quote = true

[[abbr]]
key = 'vf'
val = 'vim (eval (__fzfcmd))'
cat = 'cmds'
shell = 'fish'
desc = 'Open fzf search result in vim'
quote = true

[[abbr]]
key = 'vet'
val = 'vim $HOME/dotfiles/dotfiles/env.toml'
cat = 'cmds'
shell = 'common'
desc = 'Open env.toml in vim'
quote = true
#
# fish shell {{{3
[[abbr]]
key = 'frel'
val = 'exec fish'
cat = 'cmds'
shell = 'fish'
desc = 'Reload fish shell'
quote = true

[[abbr]]
key = 'frec'
val = 'clear; and exec fish'
cat = 'cmds'
shell = 'fish'
desc = 'Clear terminal and reload fish shell'
quote = true

[[abbr]]
key = 'funced'
val = 'funced -s'
cat = 'cmds'
shell = 'fish'
desc = 'Save function after editing'
quote = true

[[abbr]]
key = 'cm'
val = 'command'
cat = 'cmds'
shell = 'fish'
desc = 'Equivalent to `\` in bash'

[[abbr]]
key = 'fcf'
val = "vim $__fish_config_dir/config.fish"
cat = 'cmds'
shell = 'fish'
desc = 'Edit config.fish in vim'

[[abbr]]
key = 'del'
val = 'history delete'
cat = 'cmds'
shell = 'fish'
desc = 'Delete history matching pattern'
quote = true

[[abbr]]
key = 'dlast'
val = 'history delete $history[1] --exact --case-sensitive'
cat = 'cmds'
shell = 'fish'
desc = 'Delete last history item'
quote = true

[[abbr]]
key = 'path'
val = 'set -S PATH'
cat = 'cmds'
shell = 'fish'
desc = 'Print details of PATH variable'
quote = true

# bash {{{3
[[abbr]]
key = 'brc'
val = 'vim $HOME/.bashrc'
cat = 'cmds'
shell = 'bash'
desc = 'Open bashrc in vim'

# python {{{3
[[abbr]]
key = 'denv'
val = 'source $def_venv'
cat = 'cmds'
shell = 'fish'
desc = 'Activate default Python venv'
quote = true

# Aliases {{{1
# git {{{2
[[alias]]
key = 'git'
val = 'hub'
cat = 'cmds'
shell = 'bash'
desc = 'Wrapper for git with extra GitHub features'
